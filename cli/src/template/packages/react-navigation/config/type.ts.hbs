import type { ParamListBase, RouteConfig } from '@react-navigation/native'
import {
  CardStyleInterpolators,
  type StackNavigationOptions
} from '@react-navigation/stack'


export type RootStackRoutes = {
  //Auth Rotues
  Signin: undefined

  // Bottom Tab Routes
  Home: undefined
}

export type BottomTabRoutes = Pick<RootStackRoutes, 'Home'>

export type RouteNames = keyof RootStackRoutes

export type TScreen = {
  name: string
  component: () => JSX.Element
}

export type ScreenOptions<T extends ParamListBase, K extends {}> = {
  [screenName: string]: RouteConfig<T, keyof T, any, K, any>['options']
}

export function createEnum<T extends { [P in keyof T]: P }>(o: T) {
  return o
}

export const defaultScreenOptions = {
  headerShown: false,
  cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS
}

export const screenOptions: ScreenOptions<
  RootStackRoutes,
  StackNavigationOptions
> = {
  Signin: {
    headerShown: false,
    cardStyleInterpolator: CardStyleInterpolators.forHorizontalIOS
  },
  BottomTab: { headerShown: false }
}
